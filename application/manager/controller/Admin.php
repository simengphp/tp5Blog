<?php
    /**
     * Created by PhpStorm.
     * User: Administrator
     * Date: 2018/9/26
     * Time: 11:38
     */

namespace app\manager\controller;

use app\manager\model\ActionGroup;
use app\manager\model\ControllerGroup;
use app\manager\model\Role;
use app\manager\validate\ActionMustValidate;
use app\manager\validate\AdminMustValidate;
use app\manager\validate\ControllerMustValidate;
use app\manager\validate\RoleMustValidate;
use think\Request;
use app\manager\model\Admin as adminModel;

class Admin extends Base
{
    protected $admin = null;
    protected $controllerGroup = null;
    protected $actionGroup = null;
    protected $role = null;

    public function _initialize()
    {
        $this->admin = new adminModel();
        $this->controllerGroup = new ControllerGroup();
        $this->actionGroup = new ActionGroup();
        $this->role = new Role();
        return parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**管理员列表*/
    public function adminList(Request $request)
    {
        $data = $request->param();
        $list = $this->admin->listMess(12, $data);
        // 把分页数据赋值给模板变量list
        $this->assign('list', $list);
        return $this->fetch('adminList', ['top_name' => '管理员列表', 'version' => '1.0', 'search' => $data ? $data : ['search' => '']]);
    }

    /**管理员列表*/
    public function adminTrash(Request $request)
    {
        $data = $request->param();
        $list = $this->admin->listMess(12, $data, 9);
        // 把分页数据赋值给模板变量list
        $this->assign('list', $list);
        return $this->fetch('adminList', ['top_name' => '管理员回收站列表', 'version' => '1.0', 'search' => $data ?
            $data : ['search' => '']]);
    }


    /**管理员的curd操作*/
    public function curdAdmin(Request $request)
    {
        if ($request->isPost()) {
            $data = $request->param();
            $_SESSION['think']['__token__'] = $data['__token__'];
            $errorData = (new AdminMustValidate())->goCheck();
            if ($errorData !== true) {
                return redirect('/manager/curdAdmin', [], 500, ['error' => $errorData, 'data' => $data]);
            }
            /**处理数据*/
            $ret = $this->admin->curdAdminMessage($request);
            if ($ret) {
                $this->success(isset($data['id']) && $data['id'] > 0 ? '修改成功' : '添加成功', '/manager/adminList', [], 1);
            } else {
                return redirect('/manager/curdAdmin', [], 500, ['error' => [isset($data['id']) && $data['id']
                    ? '修改失败' : '添加失败'], 'data' => $data]);
            }
        } else {
            $data = $request->param();
            if ($data) {
                $ret = $this->admin->editOneAdmin($data['id']);
            } else {
                $ret['id'] = 0;
                $ret['name'] = '';
                $ret['account'] = '';
                $ret['password'] = 'zanpu';
                $ret['pic'] = '';
            }
            return $this->fetch('curdAdmin', ['top_name' => '管理员列表', 'version' => '1.0', 'ret' => $ret]);
        }
    }

    /**删除操作*/
    public function restoreDelAdmin(Request $request)
    {
        $data = $request->param();
        $status = $data['status'];
        if ($this->admin->delAdmin($data['id'], $status)) {
            $this->success($status ? '删除成功' : '还原成功', '/manager/adminList', [], 1);
        } else {
            $this->error($status ? '删除失败' : '还原', [], [], 1);
        }
    }


    /**控制器列表*/
    public function controllerList()
    {
        $data = request()->param();
        $list = $this->controllerGroup->controllerList(12, $data);
        // 把分页数据赋值给模板变量list
        $this->assign('list', $list);
        return $this->fetch('controllerList', ['top_name' => '管理员列表', 'version' => '1.0', 'search' => $data ? $data : ['search' => '']]);
    }

    public function curdController(Request $request)
    {
        if ($request->isPost()) {
            $data = $request->param();
            $_SESSION['think']['__token__'] = $data['__token__'];
            $errorData = (new ControllerMustValidate())->goCheck();
            if ($errorData !== true) {
                return redirect('/manager/curdController', [], 500, ['error'=>$errorData,'data' => $data]);
            }
            /**处理数据*/
            $ret = $this->controllerGroup->curdMess($request);
            if ($ret) {
                $this->success(isset($data['id'])&&$data['id']>0?'修改成功':'添加成功',
                    '/manager/controllerList', [], 1);
            } else {
                return redirect('/manager/curdController', [], 500, ['error'=>[isset($data['id'])&&$data['id']
                    ?'修改失败':'添加失败'],'data' => $data]);
            }
        } else {
            $data = $request->param();
            if ($data) {
                $ret = $this->controllerGroup->editOneController($data['id']);
            } else {
                $ret['id'] = 0;
                $ret['name'] = '';
                $ret['value'] = '';
                $ret['sort'] = '';
            }
            return $this->fetch('curdController', ['top_name'=>'导航列表', 'version'=>'1.0', 'ret'=>$ret]);
        }
    }

    /**删除操作*/
    public function restoreDelController(Request $request)
    {
        $data = $request->param();
        $status = $data['status'];
        if ($this->controllerGroup->delController($data['id'], $status)) {
            $this->success($status ? '删除成功' : '还原成功', '/manager/controllerList', [], 1);
        } else {
            $this->error($status ? '删除失败' : '还原', [], [], 1);
        }
    }

    /**方法列表*/
    public function actionList()
    {
        $data = request()->param();
        $list = $this->actionGroup->actionList(12, $data);
        // 把分页数据赋值给模板变量list
        $this->assign('list', $list);
        return $this->fetch('actionList', ['top_name' => '管理员列表', 'version' => '1.0', 'search' => $data ? $data : ['search' => '']]);
    }

    public function curdAction(Request $request)
    {
        if ($request->isPost()) {
            $data = $request->param();
            $_SESSION['think']['__token__'] = $data['__token__'];
            $errorData = (new ActionMustValidate())->goCheck();
            if ($errorData !== true) {
                return redirect('/manager/curdAction', [], 500, ['error'=>$errorData,'data' => $data]);
            }
            /**处理数据*/
            $ret = $this->actionGroup->curdMess($request);
            if ($ret) {
                $this->success(isset($data['id'])&&$data['id']>0?'修改成功':'添加成功',
                    '/manager/actionList', [], 1);
            } else {
                return redirect('/manager/curdAction', [], 500, ['error'=>[isset($data['id'])&&$data['id']
                    ?'修改失败':'添加失败'],'data' => $data]);
            }
        } else {
            $data = $request->param();
            if ($data) {
                $ret = $this->actionGroup->editOneAction($data['id']);
            } else {
                $ret['id'] = 0;
                $ret['name'] = '';
                $ret['action'] = '';
                $ret['sort'] = '';
                $ret['controller_id'] = '';
            }
            $ret['controller_list'] = $this->controllerGroup->controllerList(100, $data);
            return $this->fetch('curdAction', ['top_name'=>'导航列表', 'version'=>'1.0', 'ret'=>$ret]);
        }
    }

    /**删除操作*/
    public function restoreDelAction(Request $request)
    {
        $data = $request->param();
        $status = $data['status'];
        if ($this->actionGroup->delAction($data['id'], $status)) {
            $this->success($status ? '删除成功' : '还原成功', '/manager/actionList', [], 1);
        } else {
            $this->error($status ? '删除失败' : '还原', [], [], 1);
        }
    }


    /**角色列表*/
    public function roleList()
    {
        $data = request()->param();
        $list = $this->role->roleList(12, $data);
        // 把分页数据赋值给模板变量list
        $this->assign('list', $list);
        return $this->fetch('roleList', ['top_name' => '管理员列表', 'version' => '1.0', 'search' => $data ? $data : ['search' => '']]);
    }

    public function curdRole(Request $request)
    {
        if ($request->isPost()) {
            $data = $request->param();
            $_SESSION['think']['__token__'] = $data['__token__'];
            $errorData = (new RoleMustValidate())->goCheck();
            if ($errorData !== true) {
                return redirect('/manager/curdRole', [], 500, ['error'=>$errorData,'data' => $data]);
            }
            /**处理数据*/
            $ret = $this->role->curdMess($request);
            if ($ret) {
                $this->success(isset($data['id'])&&$data['id']>0?'修改成功':'添加成功',
                    '/manager/roleList', [], 1);
            } else {
                return redirect('/manager/curdRole', [], 500, ['error'=>[isset($data['id'])&&$data['id']
                    ?'修改失败':'添加失败'],'data' => $data]);
            }
        } else {
            $data = $request->param();
            if ($data) {
                $ret = $this->role->editOneRole($data['id']);
            } else {
                $ret['id'] = 0;
                $ret['name'] = '';
                $ret['sort'] = '';
            }
            return $this->fetch('curdRole', ['top_name'=>'导航列表', 'version'=>'1.0', 'ret'=>$ret]);
        }
    }

    /**删除操作*/
    public function restoreDelRole(Request $request)
    {
        $data = $request->param();
        $status = $data['status'];
        if ($this->role->delRole($data['id'], $status)) {
            $this->success($status ? '删除成功' : '还原成功', '/manager/roleList', [], 1);
        } else {
            $this->error($status ? '删除失败' : '还原', [], [], 1);
        }
    }



    /**url
     * 展示
     * /manager/roleShow
     * 添加
     * /manager/add
     */
    public function addRole()
    {
        if (request()->post()) {

        } else {
            $data = request()->param();
            /**获取所有的控制器和方法名称*/
            $list = $this->controllerGroup->controllerListShow();
            foreach ($list as $key => $value) {
                $list[$key]['action_list'] = $this->actionGroup->actionListShow($value['id']);
            }
            $this->assign('data', $data);
            return $this->fetch('addRole', ['top_name'=>'导航列表', 'version'=>'1.0', 'list'=>$list]);
        }
    }
}
